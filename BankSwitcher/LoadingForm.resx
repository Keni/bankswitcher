<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLoading.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAyAPUnAJubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqq
        qqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6ury8vL6+vr+/v8DA
        wMHBwcLCwsfHxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAkKACcAIf8LTkVUU0NBUEUyLjADAQAAACwAAAAAMgAy
        AAAG/sCTcEgsGo/IpHLJbDqXhqdUmggEHtPs0mrVEEvasIUbMGBPD0Mi3HxYhA8y2cCNspMJQJku75fv
        SBN+g1xrgEYahIQTh0dVcgaMJxpxc41GY2RnRBp8VpKXcJpCFmpnmXWbjZ4BolxnrAEAhoATrHaxQoJ9
        h7EBhrxofaphlZYnj1a4c16HgnpkXp1cbyeedpcTaccnFpvGv6FDHay0Q+AB1eLCcwkW3gbQr+ukioPq
        RaUTJlmo9vLqroiYRAcAPid5uMiDlIDOpkcGymV5ViZZHVCqdvlx9wAUE1sYyRwkYtHKwj9s4ulJovGX
        Bg2l5HicYsuMI1YeS3gyt05isU1GiayMDGXRi6cO1qwQW6fxzaiEBprROyGCixdjQlghvTNhq5F5J7QJ
        KSlVyxhsJDUNdKV0aJM3tpQ9SJCgmS+6ONnE8fVJVERCPKeg+9tliBcRJQvd6cAF1KOljOVWQpulEpaG
        Rq3ULcJn3FIqXNhFaVlExISygMgIAxBlMmp62wIwmos0HuWp9fqeKFEFwGfcydRcw32EL53bxNNMSIal
        g1fiR+IEho4EOfXr2J0EAQAh+QQJCgApACwAAAAAMgAyAIWbm5ucnJydnZ2enp6fn5+goKChoaGioqKj
        o6OkpKSlpaWmpqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS2tra3t7e4
        uLi5ubm6urq7u7u8vLy9vb2+vr6/v7/BwcHExMTFxcXHx8fR0dEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG/sCUcEgsGo/IpHLJ
        bDqbmad0aqhGplgio0KMCAQAQzZr+DYqkcYX8BWNpRXwF8xeCxjRd1Nkl/e/DFUMekplcgB1c2yJg4RG
        cXORiodfYo5FBouVeR1ekgANl0IVgX2hRZB0jZcZfmunDQZbQmprq46emgK0do2GYaIpnoeWZZokKQ2I
        X1yiEb8AjZICV8p+DB2iHZlglgzLbEIMdoinl+N1URnGBlcp5F/ulxGalikVDdkp3HYGzZfG5jBwQ4Tb
        sga3cFHq1iBDml+Agg35dmhRnYty/hXxYg/OwmWK6iUxlNAJwgikPsL7F2FQyjntApmDYyhSTQGn1k1L
        NIcg5BWYeXSa0xkJEcaSJl8toQioQodYSrOQeNYRSUB5KXSy8SlxCB8zKbYZCNWqadeJkbgw5bKGTZ6u
        fYRECkWHDdZgBnGm+BbGDbuZet4OqUBSHB5hczRiaUBwnGLE3brA1MOxVLQSqPowgOpHTwVdiGJOxGh0
        0l0p4ypVOXQq9adKAgzom9KpkrsStQT8QyhCq957XKVEusLg8LeqBb+cmzOVjQEU9AQI7hJNFMUScYBZ
        k3320ZcoLa/4OX127RBu3LsXoVPJNXL1yRrkLo0UvpAOAse9ty+kjLvH/BEBYIAEFshEEAAh+QQJCgAk
        ACwAAAAAMgAyAIWbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqanp6eoqKipqamqqqqr
        q6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5ubm6urq7u7u9vb2+vr7IyMgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG/kCScEgsGo/IpHLJbDqf0Ghy84gUQQ+pVvgAAAiJYYRAtm6h
        ie/XkHiQveHz06CuewmArLyJwavxfnB7TH1ehoaAX3qDRQaOfolkgXcRGBiMXIeJCWYYCZGAcYN0iV9m
        RGOHd5iFm0IRjnpjoCCsgQSvbwR6BreXmCS9gsG3QmlfBKeYkAZCpQQbJF2rwM6IQsKAxn+1mCB0f1mp
        pti6ynvZf0MJCb/T4ZjgmqJipV7NjKnPuxgbEZ+ayNDbU2mcKkh3wDgiguHBIhLRpGzQpeoOOSNpdnEh
        o2VcJETn1iUEBE3iLTsA8BkpZPFORCgT7zj8JAkXEXZuKqpRiYbM00NS9DD8UVQJIB42IQldefBSCMsv
        v4Yg5FlNmp8wIBKwsfonRNUhrS6RAiD2TtSvrax5yXLsYdWnVrLVAue22lgC+NpcimCIqpRPZrQO6QIp
        aKS6UAA9sinEXyI2D4QdQuwkZx0CZ0l4nJTHoRYMj9Y4otQU3CTMcghDHdJL0ktSbGqOKiPNQNw73YLZ
        lop3EOERQnsTTgqWeJSMIVI148v4KxHVWRxFaz3QuepkQkIc++LcCCzFNPEaoGzdDl6v3ZHMGp0nfRJY
        v3o1dU+/vv2vQQAAIfkECQoAJwAsAAAAADIAMgCFm5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSk
        paWlpqamp6enqKioqampqqqqq6urrKysra2trq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4
        ubm5urq6u7u7vLy8vb29vr6+v7+/wMDAwcHBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABv7Ak3BILBqPyKRyyWw6l4an
        VGoIBBjTLNQawGi/RQw3YMCeGGUw0+EQMsbjagAQVSMZALIczq/bix18gmMAbX9Ge32CEodGYnAGjCca
        DpCNYXCGRBpwXpdClVyGGGWjeVwGmoeJbmNmiVaqYBJvqEKwoIJ/VQCnV0J8uXCSaqFxbr51iQYahxKC
        zaRcnnt+hxgSy0MYmsa/nyeBXABmRN4Bso3nZdgOsGTgQ4N8vsRF7uVSz/OEokOpJCbxsueklhVfkNB8
        O2PFwB5yWYyV6UPM3jlX2Dw1yUbMm0YjBscd5KIGj5UOSPZZYaBBgzRfH6docJjuhLsx9kjsqdkoEbSW
        bJEmTYs3xFuzPSh58Wyk0suYNgZjfirBpZmxW2NQqpGg1Yi/ExIMnWsGhpO1ISEdBBQWi+ATL9kaOmDA
        8gQJQWgSuX0igY4gAJLeKByUL4vKhntikjA5ck5hmVyI1Ur3iMxcx8VinWF2Qk5dIgboDCGxtIlBmw3B
        5slTpIQEqWDGoIYXKijRonIYzU0q+jYmK5JK1Hrs2+BE2b6LvCNDZm3yVpc1a+j6/B686lCwa9/+JAgA
        IfkECQoAKAAsAAAAADIAMgCFm5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSkpaWlpqamp6enqKio
        qampqqqqq6urrKysra2trq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4ubm5urq6u7u7vLy8
        vr6+wcHBwsLCxMTExcXF0dHRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABv5AlHBILBqPyKRyyWw6m56ndIoYICTTLJGBHUoG
        AABCq0WEGRVJYwBmh8jSTBscrgMGjAz8aQ6373R3DAgIDHtKDHSKgIF0hodGX4GMbH6VYpBGVZYIeige
        a3Zgj5kVg3VsDUYVlwCkmZNhqigNhV2hZ5lCkn53Qg13gkKbmLq8fmMoxHcktMEDs5kSVY5Cc3dYwIoI
        Ubp9xQyiw40A0ZCJbXoZZlZdlX/mhxJ2ySgVDd3sqAMVus6XDN4QIcbmVSZcgQplkMCrTT1/4f40Inen
        35EvD598ASSqFSOBmnIJ8dREAoMG9zxy9GPRXoMMpt4haJAonpN1c9i8KzdS5+21XmzIhGMpxEPNIXKC
        obIEjYw2nkqAAUKToRYdm05I1Mp4hN2ALiM3DfCHxEMlVR4IqZLTBmumUxVRRBygRxE/skMkWmuLQic2
        vMNQqRo64M0csIdIDqmw6RGDPCg2ft3zchziXcEeSuYqZR6ePghMFMmgFI9VVHs27ptJSqrKS26bzCW0
        zPFPRlW4aQmxhk0XE73HDmmAhfHVkd2yeMXyWI8ZzuOEH3KtNQyCE55bFqngSldEEqwwaUOgHfAuNnpM
        YpkTG2IbsNQCmjdil5Ci+Uca6FdpED8RswWtAZ1/ykz2CYFKKIbgggw+EQQAIfkECQoAIwAsAAAAADIA
        MgCFm5ubnJycnZ2dnp6en5+foKCgoaGhoqKio6OjpKSkpaWlpqamp6enqKioqampqqqqq6urrKysra2t
        rq6ur6+vsLCwsbGxsrKys7OztLS0tbW1tra2t7e3uLi4ubm5urq6vLy8vr6+yMjIAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAABv7AkXBILBqPyKRyyWw6n9BoMvN4FDtWqXb0IAAAk6GFQA5voYkvgGBIJLzf
        7NmZ/pLtcPl8OV7b1XYJe1NCE3BecIBreoNDZHeJa49+iw8JGY1ciIBsZhZvil6CjQahBGZEhpEABpkZ
        BpGjEwYGWYZ4bJiZiGSFkFmwagYdmUKlX6PBdkJ1ZBbFQputI5trmA9qBNCa2cab2iNpiMSux4hWt2tm
        sHnF5n7g4QnP3PCjg6Cc90PpgNODXe5IWjMvw6xq54pZqLJqEiWCbYhQ0aMrSoZviuDRKyJuVEAt/f4c
        2sgRl6SKTy7+ecgKSZ+V1qSMOWeJXS8ibvKZ+ofGGddOghJXEngw4dMhAxNQPSEp5AG5IR2+MY0Ub9uI
        dII6JIjYBQ/TYioJPHvj0xzKbX3AJbJShxG0l2BGBCNA7JjbYnW+TEvw4Fk6nlq2mtk6pKukfXAJ7JOC
        iNZNftL4zlVz10lASmKLpBNImagWC4710rIzAeW7kXPI+vT2qGIpNlslDUIU5gFSuXaeCh4CC7AWbARE
        WNDLZc1XIh2OSxEHYgJx51WtFvZjhRam15Wh5TslBAQ24tI5zm1zh1Z2q+KyGQARPomq0QDOh59F743y
        9vjz67caBAAh+QQJCgAnACwAAAAAMgAyAIWbm5ucnJydnZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWm
        pqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGysrKzs7O0tLS1tbW2tra3t7e4uLi5ubm6
        urq7u7u8vLy+vr6/v7/AwMDBwcHExMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG/sCTcEgsGo/IpHLJbDqXhadUyggE
        GNMs1BrAEEPacIQbKGBP1YInzHQ4hA4yucCNspPVsnxfvyMxfIFcb35HdIGHchGFR2NyBYsnGXFzjEYZ
        coREGYldlkSUVoQYZqMAcwwZn51wiWedAQBnfhGddrBwe3Z3sFdCe7mZhaF9aKdWdnlWqYxjx1yqpFxe
        J5WfGBHKZUMYmsSznx6d4MGDn6CPDNgOvbvngIKBmkW1DiZZ8PF7s2ZrmLHUpBR4JqiAQV/BDlqRlcXR
        FW3TuBHJty9ChIBtGERCQ2ZeEYh7Tt1RpqoRmVQeasnBOIVTAY/lrGw8UUIZzFUnT9SCJAnasLkixFQl
        WnPo5ieHXjpytMLyXAmfDk7dIjNTS4SSRszpJEQsAFYtgNwN0eYATLlSYnQeeslAzQkPC+swaEuVzZhe
        MoVUoYvojsMyCj19YfDsGbkpcPMGg5kYwEt229hQWtRW6LKvJwbuSjmSywlKUf4WKYGhKRsyn5F9PqXx
        pxGVARY5YEDUseskXCLVXHYbSSgzA4/1NnTsGR23w4lky5b7RIg1yX1Hjg6FuvXrWYIAACH5BAkKACkA
        LAAAAAAyADIAhZubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqur
        q6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL29vb6+vsHB
        wcTExMXFxcfHx9HR0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb+wJRwSCwaj8ikcslsOpmXzHNKRQwQDaqWuIgQEQDAdbu1AhqX
        yGIwEA9A5GmkzQ7bw4OFNO4E48VudgMNVgt8SguAbYCKdGGGh0ZzjG5si4JjkUV+lgh7IA11iwNemikN
        hHViWUUXdG2Qppd2rIRdQqGLsZFzjmy4ipBmAAimKa6zxSlWoySniqyaF2awQpdsXg2UnsZgbcqJeANC
        w4C7h+FiUhnUpaKA0ZGh5kMXDXDLjGzcpuV5IZtG5TEGTFAYBAvSEPozkOAyR5TejSoliQ2+Ka4q3ZlV
        KUmihlTU3JsnCmKYC0MyJLywBg+WNRQxztrnKJqla3+IAdTC7MrrHpWDvmzcuI+MtjDxjmizlDBDhGHn
        npBosCCqkXCkiLATo8whERCLsoBAgCVFhlFJja2hg9LbACklUXoVaI1OFktiYnZTlQUrwFdpyVxM6QdS
        VSm9AOil0mAPmMURAHVNMYkYnwtiFphZYKLI2WCpKu3ZEvkOV6pDPuZcbdVJyytkXxl+xTCPFblUQKzN
        msJErnFDUB1jBiDW6Cp0vBzON3mTGE2/SZRGgCLyWySRW2tZSiJjsaUDcHsd0gulGi+AxxfZTdHbgp3q
        hwiM7Sa+pAiJ72iPf5ZN1Uz2HXGbEIMFaIR4Biao4BNBAAAh+QQJCgAlACwAAAAAMgAyAIWbm5ucnJyd
        nZ2enp6fn5+goKChoaGioqKjo6OkpKSlpaWmpqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCx
        sbGysrKzs7O0tLS1tbW2tra3t7e4uLi5ubm6urq8vLy+vr6/v7/Dw8PIyMgAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAG/sCScEgsGo/IpHLJbDqf0GjS8ngULQmpVvggAAhZocVLmGyjCYCaYEh01QDr+WmAE7xwtXzO
        HH/Xf2R7fEkTeGR5doOEQwZ3d4mPiF9uCRuMJW+RBmYlWHh/amGEdYFfnUSGh2sfjBuQcGETBgZyhoBs
        IpglkHdCql9yjnAGrbt1XmHDa0JpXwQWu0KgBtOhBJcPdtKeoARCw2TNgcaMY4gEVren4LCopLhfQwkJ
        0Zmr6ZhpoJRG63nVGHWBtSadhQ0TEkwiM4pQtFv8rtlJ0IbIiAcNL0l5BchUoHdDJoj6dWdREwt2Eq2x
        Z2SfpDsgT3oL9SWgET8dv7B8oo3M4wSM4Ww2oxexoNAnCgmUK4GsIcprDyZ8IvZgp5OlJT5MwLqh1B2r
        ZMRxG/IUQJYPFLO8IYN1F0doTCFFO2RV2tNvvNZYcWbS7TIzXluV6qvPTkA3D8kclaKwE8UhA9c45bcY
        iuJHRCyo8tLmgSOChJv0vGZ1HUE9E2KebIOHltcJGsHlVFMXStKvjcKyVEzxka45yMx4BrwmtsI9dSpH
        6UniabWetVPFPpNUhDYA1UTiHVvkehymBi6VUs1NUxkhIpxh534zaG82btgfSWr4t/yWlIY1vE/Es0aK
        0/En4IAEYhIEACH5BAkKACcALAAAAAAyADIAhZubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWl
        paampqenp6ioqKmpqaqqqqurq6ysrK2tra6urq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLq6
        uru7u7y8vL29vb6+vr+/v8DAwMHBwcPDwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAb+wJNwSCwaj8ikcslsOpeFp1Ra
        IBAc06zSQwBYixitGOMFAAoKoYJQyIiZCuxpba57u9boO6m4481/VoBpe0cZXYB2inaEhUUigolWk4J4
        co5FDmWCBRJCGQ6IXXqYRBiIXpdDp3UEYaVDmoNCEmhyZKhssCeiBGqVhFWbV5i1m3oFdr4nmrnLe5N2
        epVmv8qehbJ/en14y8JeCq+FEn+AbhnJXtjCurAYxnikGJeyZo2wXIAE+ELNgKpg2cMjTkKoVmZI7WKV
        646kSdiMZIhTIsvARRgJRGTj4cREM+OeqHNW5o6CZPXutAPQr8lBfmtQnYkY8QSrTWUUGKy5RILhziF0
        uoQsEjSjF2h3kpSroyBDhlrUAkqpVUAqs2iuiJTo40XhrhPqwp2g6umQGZ67Dnpx066jMKsCAYURhSWZ
        laG7IJlxw/WbKLxTHHQ8IoiQQWt4AD8p51VIWH4iYnlzAJdJmHidCrQRUomg5k1on4TqDPrXZ5x1GktR
        m8ebGyIiuiF0N8YSUCtS9Z2hnGdPNywn2VoRV6TKMw+hnwSd01tCq0cSkmvxxvwMs3CKBdpWoMCt9a9J
        IArZeg98kpFo2qk2D9Zc1y/sjTgogCEolgyD4yPRtF6/kWf+BShgFkEAACH5BAkKACoALAAAAAAyADIA
        hZubm5ycnJ2dnZ6enp+fn6CgoKGhoaKioqOjo6SkpKWlpaampqenp6ioqKmpqaqqqqurq6ysrK2tra6u
        rq+vr7CwsLGxsbKysrOzs7S0tLW1tba2tre3t7i4uLm5ubq6uru7u7y8vL6+vr+/v8DAwMHBwcTExMXF
        xcnJydHR0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAb+QJVwSCwaj8ikcslsOpmVynNKPQgOFKqWyMgOGQIBgLHdWgUQCgUsDpeplTBA
        DJjbr523M9S+38MCDFYHekpnbYB0iGIQhUdxinOJfYCEjkVWdwdSKh0UcqCNlyoQgnVtokSQp2SjG5Fz
        rRAHDJwQcmOjKp+RAkIQd60HdQCWl5+Sc5aZbSSkd5zHzLkqkwJZwHZjIaMhmcVCDKdzQod0rZfibRsq
        G8xeoICpjrenxhUUeSrMiV6Xw7gYcCMyLZCucH7E0MI3a9yVg+Ucaksoid0RXhanVDgFiCNFY0bUoZtC
        AQKEDvUQJRSQsQKEDRXYhMEiaN6TOH+sifKW7A/xR31UZB6w6A4NwUnEko2ckg2ATSPZwtTa0LDOUyco
        GVwtAmaOv3YADwCFKKSDvE4HDjR6FevrQUFtpAybI5eYgGgH4wkJVU2R21EA5zQSN4fbXLWujEAyqIIB
        A3YUTuHVAmHgsMm75IBEBu5NZFpzGaAoYpaj40NzxlLZkLSNWnQptVFivCVlWlyMCSeSFCgM5iYhUnIy
        UQ+k1g3u7LRCXsZv48f7Oh8BmE4SicjFUkRmieQTSD3qTGwEByxMRrJDMO7q0jfMX7K6o4UeiJ7IotuA
        6l80icue/iRsBQLGd/9xcZcQvxUoBAnnKejgg08EAQAh+QQFCgAmACwAAAAAMgAyAIWbm5ucnJydnZ2e
        np6fn5+goKChoaGioqKjo6OkpKSlpaWmpqanp6eoqKipqamqqqqrq6usrKytra2urq6vr6+wsLCxsbGy
        srKzs7O0tLS1tbW2tra3t7e4uLi5ubm6urq8vLy9vb2+vr6/v7/ExMTIyMgAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAG/kCTcEgsGo/IpHLJbDqf0Giy8qgUKwmpVpgAAAiRYYXwtW6h3S/BkEgQyIDHGWrweuFksnzeHOfV
        dl57fEp+gYd3g4REBmt4X2pvkF8PlR6LJg9wkGQJYSZYm3+Kc3V3d59EEZKBBJh+f1kmEQYGe6utBpiz
        okKreXuNeQYcuyaNXrLId1x2BGa7eLomf1/FD5zGvM5CyHnN37scpsDbX5/C57t1kuEmbWbYpwSkZ+yt
        sqrVXtOEv/sEEnCoEMFNqzf5CBHExQnQwVr9TISIoKiYFA6sJs0DcwRbQF8IpVTQ2LAMkjRvhNET+ajh
        xyNjJuGB9uQXpQcGvyTMlEAT3iI1EZ+4IXBpCLtUoJxRihDKji2LUKAK4RBBKihWz4r8WaNNlZ0sHhKw
        yYSHQIiuU/NYGZqVHE1tuFxRS/ROEFohFUwBCEPukql6607J6mklJtc5Ys2IHdIFT0JDOufkEfuGyMA3
        ZNg8WAYHsBOfMt8yzJiMohYsBtfU4vcAKbmGb6M0fgNNJQGo7NjkJsFHWJjNfO8UfbeyG4CgWjyWGMnV
        Y2wiHiIMPzN0Ir9ZX+4WaRznGLFjlLQzvsNRYprj4odsBsq2lme03IGeTV/E4+ru9Ot/f7c/v///AG4R
        BAA7
</value>
  </data>
</root>